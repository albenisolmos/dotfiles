set icons on
set nopreview
set nopreviewer
set ratios '2'

map T set preview!
map I set hidden!
map S $$SHELL
map D trash
map m push %mkdir<space>
map n push %touch<space>
# Unmap the default binding
map r
map R rename_filename
map ra push :rename<space>
map re rename_without_ext
map <enter> push :open-with<space>

map gh cd ~
map gD cd ~/Documents
map gd cd ~/Downloads
map gw cd ~/Dev
map gu cd ~/Documents/universidad
map go cd ~/.dotfiles
map gl cd ~/.local
map gc cd ~/.config
map gu cd /usr

cmd open ${{
    case $(file --mime-type $f -b) in
        text/*) nvim "$fx";;
		inode/x-empty) nvim "$fx";;
        *) for f in $fx; do xdg-open $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd rename ${{
	# Rename the file with a completely different name
	# get 'basename' of the selection
	filename="${f##*/}"
	# filename="$(printf "'%s'" "$filename")"
	# filename="${filename// /<space>}"
	mv "$filename" "$1"
	# lf -remote "send $id push :rename<space>'$filename'"
}}

cmd rename_filename ${{
	# Edit the current filename
	filename="${f##*/}"
	extension="${filename##*.}"
	length_extension="${#extension}"
	displace=""

	i=0
	while [ "$i" -le $length_extension ]; do
		i=$(( i + 1 ))
		displace="${displace}<left>"
	done

	lf -remote "send $id push :rename<space>$filename$displace"
}}

cmd rename_without_ext ${{
	# Edit filename before the extension
	# get 'basename' of the selection
	filename="${f##*/}"
	# quote it so we won't deal with quotes in the lf -remote command
	filename="$(printf '%q' "$filename")"
	filename="${filename// /<space>}"
	lf -remote "send $id push :rename<space>$filename<a-b><c-b>"
}}

cmd trash %{{
	set -f
	if gio trash 2>/dev/null; then
		gio trash "$fx"
	else
		mkdir -p ~/.local/share/Trash/files
		mv -- "$fx" ~/.local/share/Trash/files
	fi
}}
	
cmd open-with &"$@" "$fx"

cmd yank-dirname $dirname -- "$f" | head -c-1 | xclip -i -selection clipboard
cmd yank-path $printf '%s' "$fx" | xclip -i -selection clipboard
cmd yank-basename $basename -a -- $fx | head -c-1 | xclip -i -selection clipboard


cmd select-all-files ${{
	{ echo "$fs"; find -L "$(pwd)" -mindepth 1 -maxdepth 1 -type f; } |
	if [ "$lf_hidden" = "false" ]; then
		# remove any hidden files so you only select files you can see.
		grep -v '/\.[^/]\+$'
	else
		cat
	fi |
	sed '/^$/d' | sort | uniq -u |
	xargs -d '\n' -r -I{} lf -remote "send $id toggle {}"
}}

cmd select-all-dirs ${{
	{ echo "$fs"; find -L "$(pwd)" -mindepth 1 -maxdepth 1 -type d; } |
	if [ "$lf_hidden" = "false" ]; then
		grep -v '/\.[^/]\+$'
	else
		cat
	fi |
	sed '/^$/d' | sort | uniq -u |
	xargs -d '\n' -r -I{} lf -remote "send $id toggle {}"
}}

cmd tar ${{
	# compress file or selected files with tar and gunzip
	set -f
	mkdir $1
	cp -r $fx $1
	tar czf $1.tar.gz $1
	rm -rf $1
}}

cmd zip ${{
	# compress current file or selected files with zip
	set -f
	mkdir $1
	cp -r $fx $1
	zip -r $1.zip $1
	rm -rf $1
}}

source "/home/olmos/.config/lf/icons"
