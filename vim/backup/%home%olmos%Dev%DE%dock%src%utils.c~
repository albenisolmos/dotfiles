#include <gio/gdesktopappinfo.h>
#include <olmos/ol_regex.h>
#include <olmos/ol_string.h>

#include "item.h"

int remember_items(GtkWidget *box) {
	const char cache_path[] = "/home/olmos/.config/olmos/dockrc";
	const char pattern_remove_symbol[] = "(\\S+)";
	char *line = NULL;
	char *name, *icon, *exec, *tmp_exec;
	regex_t re;
	GDesktopAppInfo *app_data;
	GKeyFile *file;
	GError *error;
	gsize items_len;
	GStrv items_list;

	g_message("HERE");
	ol_regex_compile(&re, pattern_remove_symbol, REG_EXTENDED);

	file = g_key_file_new();
	g_key_file_load_from_file(file, cache_path, G_KEY_FILE_NONE, &error);

	g_return_if_fail(error != NULL);

	items_list = g_key_file_get_string_list(file, "main", "items", &items_len, &error);

	g_return_val_if_fail(items_list != NULL, FALSE);
	g_warn_if_fail(error != NULL);

	for (int i = 0; i < items_len; i++) {
		line = items_list[i];
		strcat(line, ".desktop");
		app_data = g_desktop_app_info_new(line);

		if (!app_data) {
			g_warning("No desktop app: %s", line);
			return FALSE;
		}

		name = g_desktop_app_info_get_string(app_data, "Name");
		icon = g_desktop_app_info_get_string(app_data, "Icon");
		exec = g_desktop_app_info_get_string(app_data, "TryExec");

		if (!exec) {
			exec = g_desktop_app_info_get_string(app_data, "Exec");
			tmp_exec = ol_str_replace_regex(exec, &re, "");
			exec = tmp_exec == NULL ? exec : tmp_exec;
		}

		gtk_container_add(GTK_CONTAINER(box), dock_item_new(name, icon, exec));
	}

	return TRUE;
}

void remove_field_code(char **argv, gint length)
{
	char *arg;
	for (guint i = 0; i < length; i++)
	{
		arg = argv[i];
		if (arg[0] == '%')
			arg = '\0';
		argv[i] = arg;
	}
}

gboolean spawn_app(const gchar *exec, GError **error)
{
	gboolean retval;
	gchar **argv = NULL;
	gint length;

	g_return_val_if_fail (exec != NULL, FALSE);

	if (!g_shell_parse_argv (exec, &length, &argv, error))
		return FALSE;

	remove_field_code(argv, length);

	retval = g_spawn_async (NULL,
			argv,
			NULL,
			G_SPAWN_SEARCH_PATH,
			NULL,
			NULL,
			NULL,
			error);

	g_strfreev (argv);
	return retval;
}
